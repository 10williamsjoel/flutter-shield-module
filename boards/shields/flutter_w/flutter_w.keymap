#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/* Layers */
#define AL1  0
#define NM1  1
#define LNUM 2
#define AL2  3
#define SM1  4	
#define SM2  5	
#define SYS  6
#define FUN  7	
#define BT   8
#define AL2U 9

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
 };
 
&lt {
    tapping-term-ms =<200>;
    flavor = "tap-preferred";
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_bt { // sticky layer for bluetooth
            timeout-ms = <50>;
            key-positions = <6 7 8 9>;
            bindings = <&mo BT>;
        };
        compatible = "zmk,combos";
            combo_fun { // sticky layer for Function keys
            timeout-ms = <50>;
            key-positions = <10 11 12 13>;
            bindings = <&slm FUN>;
        };
        combo_caps { // caps word 
            timeout-ms = <50>;
            key-positions = <10 11 12>;
            bindings = <&caps_on>;
        };
        combo_num { // Num lock
            timeout-ms = <50>;
            key-positions = <7 8 9>;
            bindings = <&to NM1>;
        }; 
        combo_lhnum { // Left hand numbers
            timeout-ms = <50>;
            key-positions = <6 15>;
            bindings = <&sl LNUM>;
        }; 
        combo_ctrlsys { // Sends ctrl and sys for one handed commands
            timeout-ms = <50>;
            key-positions = <2 9>;
            bindings = <&ctrlsys>;
        }; 
        combo_mute { // Sends mute key 
            timeout-ms = <50>;
            key-positions = <0 1 7 8>;
            bindings = <&kp C_MUTE>;
        }; 
        combo_play { // Sends play/pause 
            timeout-ms = <50>;
            key-positions = <1 2 8 9>;
            bindings = <&kp C_PLAY_PAUSE>;
        }; 
        combo_volume_up { // Sends volume up
            timeout-ms = <50>;
            key-positions = <2 9>;
            bindings = <&kp A>;
        }; 
        combo_volume_down { // Sends volume down
            timeout-ms = <50>;
            key-positions = <1 8>;
            bindings = <&kp C_VOLUME_DOWN>;
        }; 
    };
};

/ {
    macros {
        os: os {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_param_1to1>
                , <&macro_tap &sl MACRO_PLACEHOLDER>
                ;
        };
        dnos: dnos {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_tap &to AL1>
                , <&macro_param_1to1>
                , <&macro_tap &sl MACRO_PLACEHOLDER>
                ;
        };
        dn: dn {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_param_1to1>
                , <&macro_tap &kp MACRO_PLACEHOLDER &mo NM1>
                ;
        };
        rst: rst {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>; // Must be 0
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &caps_off &mo NM1 &to AL1>;
        };
        caps_off: caps_off {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>; // Must be 0
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &kp F19>;
        };
        caps_on: caps_on {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>; // Must be 0
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &caps_off &mo NM1 &caps_word>;
        };
        num_on: num_on {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>; // Must be 0
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &caps_off &to NM1>;
        };
        com_spc: com_spc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>; // Must be 0
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &kp COMMA &kp SPC>;
        };
        ctrlsys: ctrlsys {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>; // Must be 0
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_press &mo SYS &kp LCTRL>
                , <&macro_pause_for_release>
                , <&macro_release &mo SYS &kp LCTRL>
                ;
        };
    };
};

/ {
    behaviors {
        slm: sticky_layer_ignore_modifiers {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&mo>;
            release-after-ms = <5000>;
            ignore-modifiers;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        alpha_1 {
            bindings = <
//              ┌─────────────┬─────────────┬─────────────┐                           ┌─────────────┬─────────────┬────────────┐	
                 &mt LGUI L    &mt LALT G    &mt LCTL D                                &mt RCTL H    &mt LALT U    &mt RGUI O      
//┌─────────────┼─────────────┼─────────────┼─────────────┤                           ├─────────────┼─────────────┼────────────┼────────────┐ 
   &lt NM1 I     &lt SM2 S     &lt SM1 R     &lt SYS T                                 &lt SYS N     &lt SM1 E     &lt SM2 A    &lt NM1 C
//└─────────────┴─────────────┴─────────────┼─────────────┼─────────────┬─────────────┼─────────────┼─────────────┴────────────┴────────────┘
                                             &mt LSFT SPC  &key_repeat   &os AL2U      &os AL2
//                                          └─────────────┴─────────────┴─────────────┴─────────────┘
            
            >;
        };
        num {
            bindings = <
//              ┌─────────────┬─────────────┬─────────────┐                           ┌─────────────┬─────────────┬────────────┐	
                 &mt LGUI PLUS &mt LALT DOT  &mt LCTL N0                               &mt RCTL N7   &mt LALT N8   &mt RGUI N9          
//┌─────────────┼─────────────┼─────────────┼─────────────┤                           ├─────────────┼─────────────┼────────────┼────────────┐ 
   &lt NM1 MINUS &lt SM2 N1    &lt SM1 N2    &lt SYS N3	                               &lt SYS N4    &lt SM1 N5    &lt SM2 N6   &lt NM1 EQUAL
//└─────────────┴─────────────┴─────────────┼─────────────┼─────────────┬─────────────┼─────────────┼─────────────┴────────────┴────────────┘
                                             &dn SPC       &kp SPC       &dnos AL2U    &dnos AL2   
//                                          └─────────────┴─────────────┴─────────────┴─────────────┘
            >;
        };
        lnum {
            bindings = <
//              ┌─────────────┬─────────────┬─────────────┐                           ┌─────────────┬─────────────┬────────────┐	
                 &kp N7        &kp N8        &kp N9                                    &mt RCTL N7   &mt LALT N8   &mt RGUI N9          
//┌─────────────┼─────────────┼─────────────┼─────────────┤                           ├─────────────┼─────────────┼────────────┼────────────┐ 
   &kp EQUAL     &kp N4        &kp N5        &kp N6                                    &lt SYS N4    &lt SM1 N5    &lt SM2 N6   &lt NM1 EQUAL
//└─────────────┴─────────────┴─────────────┼─────────────┼─────────────┬─────────────┼─────────────┼─────────────┴────────────┴────────────┘
                                             &trans        &trans        &trans        &trans           
//                                          └─────────────┴─────────────┴─────────────┴─────────────┘
            >;
        };
        alpha_2 {
            bindings = <
//              ┌─────────────┬─────────────┬─────────────┐                           ┌─────────────┬─────────────┬────────────┐	
                 &kp V         &kp W         &kp M                                     &kp F         &kp SQT       &kp Z           
//┌─────────────┼─────────────┼─────────────┼─────────────┤                           ├─────────────┼─────────────┼────────────┼────────────┐ 
   &kp  Q        &kp J         &kp P         &lt SYS K                                 &kp B         &dn DOT       &kp X        &kp Y    
//└─────────────┴─────────────┴─────────────┼─────────────┼─────────────┬─────────────┼─────────────┼─────────────┴────────────┴────────────┘
                                             &sk LSHIFT    &kp GLOBE     &os AL2U      &to AL1  
//                                          └─────────────┴─────────────┴─────────────┴─────────────┘
            >;
        };
        sym1 {
            bindings = <
//              ┌─────────────┬─────────────┬─────────────┐                           ┌─────────────┬─────────────┬────────────┐	
                 &kp POUND     &kp NUHS      &kp DLLR                                  &kp LT        &kp GT        &kp CARET
//┌─────────────┼─────────────┼─────────────┼─────────────┤                           ├─────────────┼─────────────┼────────────┼────────────┐ 
   &kp GRAVE     &kp TILDE2    &kp MINUS     &kp NUBS                                  &kp LBKT	     &kp RBKT      &kp PIPE2    &kp SLASH
//└─────────────┴─────────────┴─────────────┼─────────────┼─────────────┬─────────────┼─────────────┼─────────────┴────────────┴────────────┘
                                             &trans        &trans        &os AL2U      &trans   
//                                          └─────────────┴─────────────┴─────────────┴─────────────┘
            >;
        };
        sym2 {
            bindings = <
//              ┌─────────────┬─────────────┬─────────────┐                           ┌─────────────┬─────────────┬────────────┐	
                 &kp DQT       &kp EXCL      &kp LG(LS(S))                             &kp LPAR      &kp RPAR      &kp SEMI          
//┌─────────────┼─────────────┼─────────────┼─────────────┤                           ├─────────────┼─────────────┼────────────┼────────────┐ 
   &kp ASTERISK  &kp PERCENT   &kp QUESTION  &kp AT                                    &kp LBRC      &kp RBRC  	   &kp AMPS  	&kp COLON
//└─────────────┴─────────────┴─────────────┼─────────────┼─────────────┬─────────────┼─────────────┼─────────────┴────────────┴────────────┘
                                             &trans        &trans        &os AL2U      &trans   
//                                          └─────────────┴─────────────┴─────────────┴─────────────┘
            >;
        };
        sys {
            bindings = <
//              ┌─────────────┬─────────────┬─────────────┐                           ┌─────────────┬─────────────┬────────────┐	
                 &mt LC(A) ESC &mt DEL BSPC  &mt LCTL K_CMENU                          &kp DEL       &mt PG_UP UP  &mt LC(BSPC) BSPC          
//┌─────────────┼─────────────┼─────────────┼─────────────┤                           ├─────────────┼─────────────┼────────────┼────────────┐ 
&mt ENTER TAB &mt LC(Y) LC(Z) &mt LC(V) LC(C) &trans                                 &mt HOME LEFT &mt PG_DN DOWN &mt END RIGHT &dn ENTER   
//└─────────────┴─────────────┴─────────────┼─────────────┼─────────────┬─────────────┼─────────────┼─────────────┴────────────┴────────────┘
                                             &kp LSHFT     &kp LALT      &os AL2U      &kp LCTRL   
//                                          └─────────────┴─────────────┴─────────────┴─────────────┘
            >;
        };
        fun {
            bindings = <
//              ┌─────────────┬─────────────┬─────────────┐                           ┌─────────────┬─────────────┬────────────┐	
                 &kp F10       &kp F11       &kp F12                                   &kp F7        &kp F8        &kp F9          
//┌─────────────┼─────────────┼─────────────┼─────────────┤                           ├─────────────┼─────────────┼────────────┼────────────┐ 
   &bootloader   &kp F1        &kp F2        &kp F3                                    &kp F4        &kp F5        &kp F6       &kp LGUI
//└─────────────┴─────────────┴─────────────┼─────────────┼─────────────┬─────────────┼─────────────┼─────────────┴────────────┴────────────┘
                                             &kp LSHFT     &kp LALT      &os AL2U      &kp LCTRL   
//                                          └─────────────┴─────────────┴─────────────┴─────────────┘
            >;
        };
        bt {
            bindings = <
//              ┌─────────────┬─────────────┬─────────────┐                           ┌─────────────┬─────────────┬────────────┐	
                 &trans        &trans        &trans                                    &bt BT_SEL 0  &out OUT_TOG  &bt BT_CLR          
//┌─────────────┼─────────────┼─────────────┼─────────────┤                           ├─────────────┼─────────────┼────────────┼────────────┐ 
   &trans        &trans        &trans        &trans                                    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3 &bt BT_SEL 4   
//└─────────────┴─────────────┴─────────────┼─────────────┼─────────────┬─────────────┼─────────────┼─────────────┴────────────┴────────────┘
                                             &trans        &trans        &os AL2U      &bootloader   
//                                          └─────────────┴─────────────┴─────────────┴─────────────┘
            >;
        };
        alpha_caps_2 {
            bindings = <
//              ┌─────────────┬─────────────┬─────────────┐                           ┌─────────────┬─────────────┬────────────┐	
                 &kp LS(V)     &kp LS(W)     &kp LS(M)                                 &kp LS(F)     &com_spc      &kp LS(Z)          
//┌─────────────┼─────────────┼─────────────┼─────────────┤                           ├─────────────┼─────────────┼────────────┼────────────┐ 
   &kp LS(Q)     &kp LS(J)     &kp LS(P)     &kp LS(K)                                 &kp LS(B)     &kp COMMA     &kp LS(X)     &kp LS(Y)      
//└─────────────┴─────────────┴─────────────┼─────────────┼─────────────┬─────────────┼─────────────┼─────────────┴────────────┴────────────┘
                                             &kp UNDER     &rst          &os AL2U      &to AL1   
//                                          └─────────────┴─────────────┴─────────────┴─────────────┘
            >;
        };
    };

};
